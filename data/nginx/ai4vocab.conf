server {
    listen 80;
    server_name ai4vocab.cn www.ai4vocab.cn;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name ai4vocab.cn www.ai4vocab.cn;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/ai4vocab.cn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ai4vocab.cn/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        alias /var/www/html/ai4vocab/;
        index index.html;
        try_files $uri $uri/ /index.html;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1M;
            add_header Cache-Control "public";

            # Enable cache busting
            add_header Cache-Control "must-revalidate";
        }

        # Don't cache HTML
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
        }
    }

    location /api {
        proxy_pass http://host.docker.internal:6001/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}



